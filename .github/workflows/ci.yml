name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.stack
            !~/.stack/setup-exe-cache
          key: ${{ runner.os }}-test-stack-${{ hashFiles('package.yaml') }}-${{ hashFiles('stack.yaml*') }}
      - uses: actions/setup-haskell@v1
        with:
          enable-stack: true
      - name: Install dependencies
        run: make test-deps
      - name: Build
        run: make build-tests-coverage
      - name: Run tests
        run: make test-coverage
      - name: Generate coverage report
        run: make report-coverage
      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          file: ./codecov.json
  test-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-test-docs-npm-${{ hashFiles('docs/package-lock.json') }}
      - name: Install dependencies
        run: make npm-ci-docs
      - name: Run tests
        run: make test-docs
  publish-docs:
    needs: test-docs
    runs-on: ubuntu-latest
    if: github.repository == 'tenpureto/tenpureto' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-test-docs-npm-${{ hashFiles('docs/package-lock.json') }}
      - name: Install dependencies
        run: make npm-ci-docs
      - name: Publish docs
        run: make publish-docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-action
          GIT_AUTHOR_EMAIL: github-action@tenpureto.org
          GIT_COMMITTER_NAME: github-action
          GIT_COMMITTER_EMAIL: github-action@tenpureto.org
  build-x86_64-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup
        run: sudo rm -rf /usr/local/lib/android /opt/ghc
      - uses: actions/checkout@v2
        with:
          # Nix Flakes doesn't work on shallow clones
          fetch-depth: 0
      - uses: cachix/install-nix-action@v12
        with:
          install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20201221_9fab14a/install
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org https://hydra.iohk.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
      - uses: cachix/cachix-action@v8
        with:
          name: tenpureto
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: Build
        run: nix build --print-build-logs .#tenpureto-dist
        timeout-minutes: 300
      - run: mkdir artifacts && cp result/bin/tenpureto result/*.deb result/*.rpm artifacts/
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: tenpureto-x86_64-linux
          path: artifacts/*
  build-x86_64-darwin:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      # # Disabled because of https://github.com/actions/cache/issues/445
      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.stack
      #       !~/.stack/setup-exe-cache
      #     key: ${{ runner.os }}-test-stack-${{ hashFiles('package.yaml') }}-${{ hashFiles('stack.yaml*') }}
      - uses: actions/setup-haskell@v1
        with:
          enable-stack: true
      - name: Install dependencies
        run: make build-deps
      - name: Build
        run: make .build/staging/bin/tenpureto
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: tenpureto-x86_64-darwin
          path: .build/staging/bin/tenpureto
  release:
    runs-on: ubuntu-latest
    if: github.repository == 'tenpureto/tenpureto' && github.ref == 'refs/heads/master'
    needs:
      - test
      - build-x86_64-darwin
      - build-x86_64-linux
    steps:
      - uses: actions/checkout@v2
      - uses: jaliborc/action-general-autotag@1.0.1
        id: tag
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          source_file: "package.yaml"
          extraction_regex: "version:\\s*(\\d+\\.\\d+\\.\\d+)"
          tag_format: "v{version}"
      - uses: actions/download-artifact@v2.0.9
        if: steps.tag.outputs.tagsha != ''
        with:
          name: tenpureto-x86_64-linux
      - uses: actions/download-artifact@v2.0.9
        if: steps.tag.outputs.tagsha != ''
        with:
          name: tenpureto-x86_64-darwin
      - if: steps.tag.outputs.tagsha != ''
        run: |
          mkdir release
          mv tenpureto-x86_64-linux/tenpureto release/tenpureto-${{ steps.tag.outputs.version }}-x86_64-linux
          mv tenpureto-x86_64-darwin/tenpureto release/tenpureto-${{ steps.tag.outputs.version }}-x86_64-darwin
          mv tenpureto-x86_64-linux/*.deb release/
          mv tenpureto-x86_64-linux/*.rpm release/
      - name: Release
        if: steps.tag.outputs.tagsha != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tagname }}
          name: ${{ steps.tag.outputs.version }}
          draft: true
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
